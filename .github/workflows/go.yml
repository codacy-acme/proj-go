name: Go

on:
  push:
    branches: [ proj-go ]
  pull_request:
    branches: [ proj-go ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    
    - name: Run Codacy Coverage - aligncheck
      run: |
            export CODACY_CODE=$GITHUB_WORKSPACE
            go build
            docker run \
                  --rm=true \
                  --env CODACY_CODE="$CODACY_CODE" \
                  --volume /var/run/docker.sock:/var/run/docker.sock \
                  --volume "$CODACY_CODE":"$CODACY_CODE" \
                  --volume /tmp:/tmp \
                  codacy/codacy-analysis-cli \
                    analyze --tool aligncheck \
                  --allow-network \
                  --upload \
                  --verbose \
                  --project-token ${{ secrets.CODACY_PROJECT_TOKEN }}
            go test -coverprofile cover.out
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
              --force-coverage-parser go -r cover.out -t  ${{ secrets.CODACY_PROJECT_TOKEN }}
    # - name: Run Codacy Coverage - deadcode
    #   run: |
    #         export CODACY_CODE=$GITHUB_WORKSPACE
    #         go build
    #         docker run \
    #               --rm=true \
    #               --env CODACY_CODE="$CODACY_CODE" \
    #               --volume /var/run/docker.sock:/var/run/docker.sock \
    #               --volume "$CODACY_CODE":"$CODACY_CODE" \
    #               --volume /tmp:/tmp \
    #               codacy/codacy-analysis-cli  \
    #               analyze --tool deadcode \
    #               --allow-network \
    #               --upload \
    #               --verbose \
    #               --project-token ${{ secrets.CODACY_PROJECT_TOKEN }}
    #         go test -coverprofile cover.out
    #         bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
    #           --force-coverage-parser go -r cover.out -t  ${{ secrets.CODACY_PROJECT_TOKEN }}
    # - name: Run Codacy Coverage - gosec
    #   run: |
    #         gosec -fmt json -log log.txt ./... | \
    #         java -jar codacy-gosec-0.3.8.jar  | \  
    #         curl -XPOST -L -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
    #           -H "Content-type: application/json" -d @- \
    #           "https://api.codacy.com/2.0/commit/$GITHUB_SHA/issuesRemoteResults"
    #         curl -XPOST -L -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
    #           -H "Content-type: application/json" \
    #           "https://api.codacy.com/2.0/commit/$GITHUB_SHA/resultsFinal"