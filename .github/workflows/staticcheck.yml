name: StaticCheck

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ proj-go ]

jobs:
  codacy-analysis-cli:
    name: start
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set-up go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.1
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          run-staticcheck: "true"
          upload: true
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      # - name: staticheck - cli
      #   run: |
      #     set -eux
      #     cd /tmp
      #     curl -fsSL https://api.github.com/repos/dominikh/go-tools/releases/latest \
      #       | grep -E "browser_download_url.*staticcheck_linux_amd64.tar.gz\"$" \
      #       | cut -d '"' -f 4 \
      #       | xargs -L 1 curl -fsSL -o /tmp/staticcheck_linux_amd64.tar.gz
      #     tar -xvf /tmp/staticcheck_linux_amd64.tar.gz staticcheck/staticcheck
      #     chmod +x ./staticcheck/staticcheck
      #     curl -fsSL https://api.github.com/repos/codacy/codacy-staticcheck/releases/latest \
      #       | grep "browser_download_url" | grep -v "browser_download_url.*jar" \
      #       | cut -d '"' -f 4 \
      #       | xargs -L 1 curl -fsSL -o /tmp/codacy-staticcheck
      #     chmod +x /tmp/codacy-staticcheck
      #     cd -
      #     echo ========= START TEST =========
      #     echo $GITHUB_WORKSPACE
      #     whereis go
      #     /usr/bin/find . -type f -name go.mod -exec bash -c 'cd $(dirname $1); cp $1 $1.codacy.bak; PKGS=$(go list ./...); /tmp/staticcheck/staticcheck -f json $PKGS; mv $1.codacy.bak $1' _ {} \; > /tmp/staticcheck-out.json
      #     echo ========= END TEST ======
      #     cat /tmp/staticcheck-out.json | echo
      #     du -sh /tmp/staticcheck-out.json
      #     /tmp/codacy-staticcheck < /tmp/staticcheck-out.json > /tmp/codacy-out.json
      #     cat /tmp/codacy-out.json
          
         